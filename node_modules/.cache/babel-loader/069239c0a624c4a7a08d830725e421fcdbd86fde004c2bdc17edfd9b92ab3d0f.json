{"ast":null,"code":"// Base rates for different work types (in dollars)\nconst BASE_RATES = {\n  presentation: 70,\n  website_design: 200,\n  landing_page: 160,\n  logo: 110,\n  branding: 350,\n  social_media: 40,\n  print: 55,\n  illustration: 80,\n  ui_ux: 280,\n  delegated_support: 25,\n  web_development: 400\n};\n\n// Multipliers for specific designers\nconst DESIGNER_MULTIPLIERS = {\n  alex: 1.4,\n  // Alex - experienced designer\n  maria: 1.2,\n  // Maria - mid-level\n  dmitry: 1.6,\n  // Dmitry - high level\n  anna: 1.1,\n  // Anna - beginner\n  sergey: 1.3,\n  // Sergey - experienced\n  elena: 1.0,\n  // Elena - basic level\n  andrey: 1.5,\n  // Andrey - high level\n  natalia: 1.2 // Natalia - mid-level\n};\n\n// Multipliers for world regions\nconst REGION_MULTIPLIERS = {\n  north_america: 1.8,\n  // North America - high rates\n  europe: 1.5,\n  // Europe - high rates\n  asia: 1.2,\n  // Asia - medium rates\n  middle_east: 1.4,\n  // Middle East - above average\n  africa: 0.8,\n  // Africa - below average\n  south_america: 1.0,\n  // South America - medium rates\n  australia_oceania: 1.6,\n  // Australia & Oceania - high rates\n  cis: 1.1 // CIS - slightly above average\n};\n\n// Multipliers for sources\nconst SOURCE_MULTIPLIERS = {\n  fiverr: 0.9,\n  upwork: 1.0,\n  freelancer: 0.95,\n  telegram: 1.1,\n  internal: 1.2,\n  other: 1.0\n};\n\n// Urgency multipliers based on days\nconst URGENCY_MULTIPLIERS = {\n  1: 1.3,\n  // 1 day - 30% extra\n  2: 1.2,\n  // 2 days - 20% extra\n  3: 1.1 // 3 days - 10% extra\n};\n\n// Elements multiplier\nconst ELEMENTS_MULTIPLIER = 0.1; // +10% per element\n\n// Company margin (multiplier)\nconst COMPANY_MARGIN = 1.4;\n\n// Current exchange rate (USD to RUB) - you can update this or fetch from API\nconst USD_TO_RUB_RATE = 95.5;\nexport function calculateProjectCost(form) {\n  // Calculate based on available fields\n  let baseRate = 0;\n  let designerMultiplier = 1.0;\n  let regionMultiplier = 1.0;\n  let sourceMultiplier = 1.0;\n  let urgencyMultiplier = 1.0;\n  let elementsMultiplier = 1.0;\n\n  // Base rate calculation\n  if (form.workType) {\n    baseRate = BASE_RATES[form.workType] || 70;\n  } else {\n    baseRate = 70; // Default base rate\n  }\n\n  // Designer multiplier\n  if (form.designer) {\n    designerMultiplier = DESIGNER_MULTIPLIERS[form.designer] || 1.0;\n  }\n\n  // Region multiplier\n  if (form.region) {\n    regionMultiplier = REGION_MULTIPLIERS[form.region] || 1.0;\n  }\n\n  // Source multiplier\n  if (form.source) {\n    sourceMultiplier = SOURCE_MULTIPLIERS[form.source] || 1.0;\n  }\n\n  // Urgency multiplier\n  if (form.isUrgent && form.urgencyDays) {\n    urgencyMultiplier = URGENCY_MULTIPLIERS[form.urgencyDays] || 1.0;\n  }\n\n  // Elements multiplier\n  elementsMultiplier = 1 + form.elementsCount * ELEMENTS_MULTIPLIER;\n\n  // Calculate designer price\n  const designerPrice = Math.round(baseRate * designerMultiplier * regionMultiplier * sourceMultiplier * urgencyMultiplier * elementsMultiplier);\n\n  // Calculate client price (with company margin)\n  const clientPrice = Math.round(designerPrice * COMPANY_MARGIN);\n  return {\n    clientPrice,\n    designerPrice\n  };\n}\n\n// Function for formatting price in dollars\nexport function formatPriceUSD(price) {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  }).format(price);\n}\n\n// Function for formatting price in rubles\nexport function formatPriceRUB(price) {\n  const rubPrice = Math.round(price * USD_TO_RUB_RATE);\n  return new Intl.NumberFormat('ru-RU', {\n    style: 'currency',\n    currency: 'RUB',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  }).format(rubPrice);\n}\n\n// Function to get raw price values for copying\nexport function getPriceValues(price) {\n  return {\n    usd: price,\n    rub: Math.round(price * USD_TO_RUB_RATE)\n  };\n}","map":{"version":3,"names":["BASE_RATES","presentation","website_design","landing_page","logo","branding","social_media","print","illustration","ui_ux","delegated_support","web_development","DESIGNER_MULTIPLIERS","alex","maria","dmitry","anna","sergey","elena","andrey","natalia","REGION_MULTIPLIERS","north_america","europe","asia","middle_east","africa","south_america","australia_oceania","cis","SOURCE_MULTIPLIERS","fiverr","upwork","freelancer","telegram","internal","other","URGENCY_MULTIPLIERS","ELEMENTS_MULTIPLIER","COMPANY_MARGIN","USD_TO_RUB_RATE","calculateProjectCost","form","baseRate","designerMultiplier","regionMultiplier","sourceMultiplier","urgencyMultiplier","elementsMultiplier","workType","designer","region","source","isUrgent","urgencyDays","elementsCount","designerPrice","Math","round","clientPrice","formatPriceUSD","price","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatPriceRUB","rubPrice","getPriceValues","usd","rub"],"sources":["/Users/n1kozavr/design-calculator/src/calculator.ts"],"sourcesContent":["import { ProjectForm, CalculationResult } from './types';\n\n// Base rates for different work types (in dollars)\nconst BASE_RATES = {\n  presentation: 70,\n  website_design: 200,\n  landing_page: 160,\n  logo: 110,\n  branding: 350,\n  social_media: 40,\n  print: 55,\n  illustration: 80,\n  ui_ux: 280,\n  delegated_support: 25,\n  web_development: 400\n};\n\n// Multipliers for specific designers\nconst DESIGNER_MULTIPLIERS = {\n  alex: 1.4,      // Alex - experienced designer\n  maria: 1.2,     // Maria - mid-level\n  dmitry: 1.6,    // Dmitry - high level\n  anna: 1.1,      // Anna - beginner\n  sergey: 1.3,    // Sergey - experienced\n  elena: 1.0,     // Elena - basic level\n  andrey: 1.5,    // Andrey - high level\n  natalia: 1.2    // Natalia - mid-level\n};\n\n// Multipliers for world regions\nconst REGION_MULTIPLIERS = {\n  north_america: 1.8,    // North America - high rates\n  europe: 1.5,           // Europe - high rates\n  asia: 1.2,             // Asia - medium rates\n  middle_east: 1.4,      // Middle East - above average\n  africa: 0.8,           // Africa - below average\n  south_america: 1.0,    // South America - medium rates\n  australia_oceania: 1.6, // Australia & Oceania - high rates\n  cis: 1.1               // CIS - slightly above average\n};\n\n// Multipliers for sources\nconst SOURCE_MULTIPLIERS = {\n  fiverr: 0.9,\n  upwork: 1.0,\n  freelancer: 0.95,\n  telegram: 1.1,\n  internal: 1.2,\n  other: 1.0\n};\n\n// Urgency multipliers based on days\nconst URGENCY_MULTIPLIERS = {\n  1: 1.3,  // 1 day - 30% extra\n  2: 1.2,  // 2 days - 20% extra\n  3: 1.1   // 3 days - 10% extra\n};\n\n// Elements multiplier\nconst ELEMENTS_MULTIPLIER = 0.1; // +10% per element\n\n// Company margin (multiplier)\nconst COMPANY_MARGIN = 1.4;\n\n// Current exchange rate (USD to RUB) - you can update this or fetch from API\nconst USD_TO_RUB_RATE = 95.5;\n\nexport function calculateProjectCost(form: ProjectForm): CalculationResult | null {\n  // Calculate based on available fields\n  let baseRate = 0;\n  let designerMultiplier = 1.0;\n  let regionMultiplier = 1.0;\n  let sourceMultiplier = 1.0;\n  let urgencyMultiplier = 1.0;\n  let elementsMultiplier = 1.0;\n\n  // Base rate calculation\n  if (form.workType) {\n    baseRate = BASE_RATES[form.workType as keyof typeof BASE_RATES] || 70;\n  } else {\n    baseRate = 70; // Default base rate\n  }\n\n  // Designer multiplier\n  if (form.designer) {\n    designerMultiplier = DESIGNER_MULTIPLIERS[form.designer as keyof typeof DESIGNER_MULTIPLIERS] || 1.0;\n  }\n\n  // Region multiplier\n  if (form.region) {\n    regionMultiplier = REGION_MULTIPLIERS[form.region as keyof typeof REGION_MULTIPLIERS] || 1.0;\n  }\n\n  // Source multiplier\n  if (form.source) {\n    sourceMultiplier = SOURCE_MULTIPLIERS[form.source as keyof typeof SOURCE_MULTIPLIERS] || 1.0;\n  }\n\n  // Urgency multiplier\n  if (form.isUrgent && form.urgencyDays) {\n    urgencyMultiplier = URGENCY_MULTIPLIERS[form.urgencyDays as keyof typeof URGENCY_MULTIPLIERS] || 1.0;\n  }\n\n  // Elements multiplier\n  elementsMultiplier = 1 + (form.elementsCount * ELEMENTS_MULTIPLIER);\n\n  // Calculate designer price\n  const designerPrice = Math.round(\n    baseRate * \n    designerMultiplier * \n    regionMultiplier * \n    sourceMultiplier * \n    urgencyMultiplier * \n    elementsMultiplier\n  );\n  \n  // Calculate client price (with company margin)\n  const clientPrice = Math.round(designerPrice * COMPANY_MARGIN);\n\n  return {\n    clientPrice,\n    designerPrice\n  };\n}\n\n// Function for formatting price in dollars\nexport function formatPriceUSD(price: number): string {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  }).format(price);\n}\n\n// Function for formatting price in rubles\nexport function formatPriceRUB(price: number): string {\n  const rubPrice = Math.round(price * USD_TO_RUB_RATE);\n  return new Intl.NumberFormat('ru-RU', {\n    style: 'currency',\n    currency: 'RUB',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  }).format(rubPrice);\n}\n\n// Function to get raw price values for copying\nexport function getPriceValues(price: number) {\n  return {\n    usd: price,\n    rub: Math.round(price * USD_TO_RUB_RATE)\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}