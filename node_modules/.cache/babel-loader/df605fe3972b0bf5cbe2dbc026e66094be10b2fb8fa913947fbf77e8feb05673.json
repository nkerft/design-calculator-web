{"ast":null,"code":"// Base rates for different work types (in dollars)\nconst BASE_RATES={presentation:70,website_design:200,landing_page:160,logo:110,branding:350,social_media:40,print:55,illustration:80,ui_ux:280,delegated_support:25,web_development:400};// Multipliers for specific designers\nconst DESIGNER_MULTIPLIERS={alex:1.4,// Alex - experienced designer\nmaria:1.2,// Maria - mid-level\ndmitry:1.6,// Dmitry - high level\nanna:1.1,// Anna - beginner\nsergey:1.3,// Sergey - experienced\nelena:1.0,// Elena - basic level\nandrey:1.5,// Andrey - high level\nnatalia:1.2// Natalia - mid-level\n};// Multipliers for world regions\nconst REGION_MULTIPLIERS={north_america:1.8,// North America - high rates\neurope:1.5,// Europe - high rates\nasia:1.2,// Asia - medium rates\nmiddle_east:1.4,// Middle East - above average\nafrica:0.8,// Africa - below average\nsouth_america:1.0,// South America - medium rates\naustralia_oceania:1.6,// Australia & Oceania - high rates\ncis:1.1// CIS - slightly above average\n};// Multipliers for sources\nconst SOURCE_MULTIPLIERS={fiverr:0.9,upwork:1.0,freelancer:0.95,telegram:1.1,internal:1.2,other:1.0};// Urgency multipliers based on days\nconst URGENCY_MULTIPLIERS={1:1.3,// 1 day - 30% extra\n2:1.2,// 2 days - 20% extra\n3:1.1// 3 days - 10% extra\n};// Elements multiplier\nconst ELEMENTS_MULTIPLIER=0.1;// +10% per element\n// Company margin (multiplier)\nconst COMPANY_MARGIN=1.4;// Current exchange rate (USD to RUB) - you can update this or fetch from API\nconst USD_TO_RUB_RATE=95.5;export function calculateProjectCost(form){// Calculate based on available fields\nlet baseRate=0;let designerMultiplier=1.0;let regionMultiplier=1.0;let sourceMultiplier=1.0;let urgencyMultiplier=1.0;let elementsMultiplier=1.0;// Base rate calculation\nif(form.workType){baseRate=BASE_RATES[form.workType]||70;}else{baseRate=70;// Default base rate\n}// Designer multiplier\nif(form.designer){designerMultiplier=DESIGNER_MULTIPLIERS[form.designer]||1.0;}// Region multiplier\nif(form.region){regionMultiplier=REGION_MULTIPLIERS[form.region]||1.0;}// Source multiplier\nif(form.source){sourceMultiplier=SOURCE_MULTIPLIERS[form.source]||1.0;}// Urgency multiplier\nif(form.isUrgent&&form.urgencyDays){urgencyMultiplier=URGENCY_MULTIPLIERS[form.urgencyDays]||1.0;}// Elements multiplier\nelementsMultiplier=1+form.elementsCount*ELEMENTS_MULTIPLIER;// Calculate designer price\nconst designerPrice=Math.round(baseRate*designerMultiplier*regionMultiplier*sourceMultiplier*urgencyMultiplier*elementsMultiplier);// Calculate client price (with company margin)\nconst clientPrice=Math.round(designerPrice*COMPANY_MARGIN);return{clientPrice,designerPrice};}// Function for formatting price in dollars\nexport function formatPriceUSD(price){return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD',minimumFractionDigits:0,maximumFractionDigits:0}).format(price);}// Function for formatting price in rubles\nexport function formatPriceRUB(price){const rubPrice=Math.round(price*USD_TO_RUB_RATE);return new Intl.NumberFormat('ru-RU',{style:'currency',currency:'RUB',minimumFractionDigits:0,maximumFractionDigits:0}).format(rubPrice);}// Function to get raw price values for copying\nexport function getPriceValues(price){return{usd:price,rub:Math.round(price*USD_TO_RUB_RATE)};}","map":{"version":3,"names":["BASE_RATES","presentation","website_design","landing_page","logo","branding","social_media","print","illustration","ui_ux","delegated_support","web_development","DESIGNER_MULTIPLIERS","alex","maria","dmitry","anna","sergey","elena","andrey","natalia","REGION_MULTIPLIERS","north_america","europe","asia","middle_east","africa","south_america","australia_oceania","cis","SOURCE_MULTIPLIERS","fiverr","upwork","freelancer","telegram","internal","other","URGENCY_MULTIPLIERS","ELEMENTS_MULTIPLIER","COMPANY_MARGIN","USD_TO_RUB_RATE","calculateProjectCost","form","baseRate","designerMultiplier","regionMultiplier","sourceMultiplier","urgencyMultiplier","elementsMultiplier","workType","designer","region","source","isUrgent","urgencyDays","elementsCount","designerPrice","Math","round","clientPrice","formatPriceUSD","price","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatPriceRUB","rubPrice","getPriceValues","usd","rub"],"sources":["/Users/n1kozavr/design-calculator/src/calculator.ts"],"sourcesContent":["import { ProjectForm, CalculationResult } from './types';\n\n// Base rates for different work types (in dollars)\nconst BASE_RATES = {\n  presentation: 70,\n  website_design: 200,\n  landing_page: 160,\n  logo: 110,\n  branding: 350,\n  social_media: 40,\n  print: 55,\n  illustration: 80,\n  ui_ux: 280,\n  delegated_support: 25,\n  web_development: 400\n};\n\n// Multipliers for specific designers\nconst DESIGNER_MULTIPLIERS = {\n  alex: 1.4,      // Alex - experienced designer\n  maria: 1.2,     // Maria - mid-level\n  dmitry: 1.6,    // Dmitry - high level\n  anna: 1.1,      // Anna - beginner\n  sergey: 1.3,    // Sergey - experienced\n  elena: 1.0,     // Elena - basic level\n  andrey: 1.5,    // Andrey - high level\n  natalia: 1.2    // Natalia - mid-level\n};\n\n// Multipliers for world regions\nconst REGION_MULTIPLIERS = {\n  north_america: 1.8,    // North America - high rates\n  europe: 1.5,           // Europe - high rates\n  asia: 1.2,             // Asia - medium rates\n  middle_east: 1.4,      // Middle East - above average\n  africa: 0.8,           // Africa - below average\n  south_america: 1.0,    // South America - medium rates\n  australia_oceania: 1.6, // Australia & Oceania - high rates\n  cis: 1.1               // CIS - slightly above average\n};\n\n// Multipliers for sources\nconst SOURCE_MULTIPLIERS = {\n  fiverr: 0.9,\n  upwork: 1.0,\n  freelancer: 0.95,\n  telegram: 1.1,\n  internal: 1.2,\n  other: 1.0\n};\n\n// Urgency multipliers based on days\nconst URGENCY_MULTIPLIERS = {\n  1: 1.3,  // 1 day - 30% extra\n  2: 1.2,  // 2 days - 20% extra\n  3: 1.1   // 3 days - 10% extra\n};\n\n// Elements multiplier\nconst ELEMENTS_MULTIPLIER = 0.1; // +10% per element\n\n// Company margin (multiplier)\nconst COMPANY_MARGIN = 1.4;\n\n// Current exchange rate (USD to RUB) - you can update this or fetch from API\nconst USD_TO_RUB_RATE = 95.5;\n\nexport function calculateProjectCost(form: ProjectForm): CalculationResult | null {\n  // Calculate based on available fields\n  let baseRate = 0;\n  let designerMultiplier = 1.0;\n  let regionMultiplier = 1.0;\n  let sourceMultiplier = 1.0;\n  let urgencyMultiplier = 1.0;\n  let elementsMultiplier = 1.0;\n\n  // Base rate calculation\n  if (form.workType) {\n    baseRate = BASE_RATES[form.workType as keyof typeof BASE_RATES] || 70;\n  } else {\n    baseRate = 70; // Default base rate\n  }\n\n  // Designer multiplier\n  if (form.designer) {\n    designerMultiplier = DESIGNER_MULTIPLIERS[form.designer as keyof typeof DESIGNER_MULTIPLIERS] || 1.0;\n  }\n\n  // Region multiplier\n  if (form.region) {\n    regionMultiplier = REGION_MULTIPLIERS[form.region as keyof typeof REGION_MULTIPLIERS] || 1.0;\n  }\n\n  // Source multiplier\n  if (form.source) {\n    sourceMultiplier = SOURCE_MULTIPLIERS[form.source as keyof typeof SOURCE_MULTIPLIERS] || 1.0;\n  }\n\n  // Urgency multiplier\n  if (form.isUrgent && form.urgencyDays) {\n    urgencyMultiplier = URGENCY_MULTIPLIERS[form.urgencyDays as keyof typeof URGENCY_MULTIPLIERS] || 1.0;\n  }\n\n  // Elements multiplier\n  elementsMultiplier = 1 + (form.elementsCount * ELEMENTS_MULTIPLIER);\n\n  // Calculate designer price\n  const designerPrice = Math.round(\n    baseRate * \n    designerMultiplier * \n    regionMultiplier * \n    sourceMultiplier * \n    urgencyMultiplier * \n    elementsMultiplier\n  );\n  \n  // Calculate client price (with company margin)\n  const clientPrice = Math.round(designerPrice * COMPANY_MARGIN);\n\n  return {\n    clientPrice,\n    designerPrice\n  };\n}\n\n// Function for formatting price in dollars\nexport function formatPriceUSD(price: number): string {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  }).format(price);\n}\n\n// Function for formatting price in rubles\nexport function formatPriceRUB(price: number): string {\n  const rubPrice = Math.round(price * USD_TO_RUB_RATE);\n  return new Intl.NumberFormat('ru-RU', {\n    style: 'currency',\n    currency: 'RUB',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  }).format(rubPrice);\n}\n\n// Function to get raw price values for copying\nexport function getPriceValues(price: number) {\n  return {\n    usd: price,\n    rub: Math.round(price * USD_TO_RUB_RATE)\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}